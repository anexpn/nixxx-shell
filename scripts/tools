#!/usr/bin/env bash

# Tools script - Display installed development tools and their descriptions

set -euo pipefail

# Color codes
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly MAGENTA='\033[0;35m'
readonly CYAN='\033[0;36m'
readonly NC='\033[0m' # No Color

# Helper function to print colored output
print_tool() {
    local tool="$1"
    local description="$2"
    local usage="$3"
    
    echo -e "${CYAN}${tool}${NC}"
    echo -e "  ${YELLOW}Description:${NC} ${description}"
    echo -e "  ${YELLOW}Usage:${NC} ${usage}"
    echo
}

# Header
echo -e "${MAGENTA}═══════════════════════════════════════════════════════════════${NC}"
echo -e "${MAGENTA}                    DEVELOPMENT TOOLS OVERVIEW${NC}"
echo -e "${MAGENTA}═══════════════════════════════════════════════════════════════${NC}"
echo

# Terminal & Navigation
echo -e "${GREEN}🖥️  Terminal & Navigation${NC}"
echo -e "${GREEN}─────────────────────────${NC}"
print_tool "starship" "Cross-shell prompt with Git info and status" "Automatically loads with your shell"
print_tool "eza" "Modern replacement for ls with colors and icons" "eza -la"
print_tool "bat" "Cat clone with syntax highlighting and Git integration" "bat file.txt"
print_tool "fzf" "Command-line fuzzy finder" "fzf | Ctrl+R for history"
print_tool "mcfly" "Smart command history search" "Ctrl+R for enhanced history"
print_tool "zoxide" "Smarter cd command that learns your habits" "z <directory>"
print_tool "yazi" "Terminal file manager with preview" "yazi"

# Development Tools
echo -e "${GREEN}⚙️  Development Tools${NC}"
echo -e "${GREEN}─────────────────────────${NC}"
print_tool "git" "Version control with delta diff viewer" "git status | git diff"
print_tool "lazygit" "Terminal UI for Git commands" "lazygit"
print_tool "helix" "Modal text editor with LSP support" "hx file.txt"
print_tool "direnv" "Load environment variables based on directory" "echo 'export FOO=bar' > .envrc && direnv allow"
print_tool "just" "Command runner (better make)" "just --list"
print_tool "gh" "GitHub CLI for repo management" "gh repo view | gh pr list"

# System Monitoring
echo -e "${GREEN}📊  System Monitoring${NC}"
echo -e "${GREEN}──────────────────────${NC}"
print_tool "btop" "Resource monitor with interactive interface" "btop"
print_tool "duf" "Disk usage analyzer (better df)" "duf"
print_tool "du-dust" "Directory size analyzer (better du)" "dust"

# Text Processing
echo -e "${GREEN}📝  Text Processing${NC}"
echo -e "${GREEN}───────────────────────${NC}"
print_tool "sd" "Intuitive find & replace (better sed)" "sd 'old' 'new' file.txt"
print_tool "pandoc" "Universal document converter" "pandoc file.md -o file.pdf"

# Multiplexers
echo -e "${GREEN}🔄  Terminal Multiplexers${NC}"
echo -e "${GREEN}─────────────────────────${NC}"
print_tool "zellij" "Terminal workspace with tabs and panes" "zellij"
print_tool "tmux" "Terminal multiplexer with session management" "tmux new-session -s mySession"

# Utilities
echo -e "${GREEN}🛠️  Utilities${NC}"
echo -e "${GREEN}──────────────${NC}"
print_tool "httpie" "User-friendly HTTP client (better curl)" "http GET api.github.com"
print_tool "curl" "Command-line HTTP client" "curl -s https://api.github.com"
print_tool "lnav" "Log file navigator and analyzer" "lnav /var/log/system.log"
print_tool "glow" "Markdown viewer for terminal" "glow README.md"
print_tool "sqlite" "Command-line SQLite database tool" "sqlite3 database.db"
print_tool "tokei" "Count lines of code by language (fast & accurate)" "tokei ."
print_tool "shellcheck" "Static analysis tool for shell scripts" "shellcheck script.sh"

# Modern CLI Tools
echo -e "${GREEN}⚡  Modern CLI Tools${NC}"
echo -e "${GREEN}─────────────────────${NC}"
print_tool "fd" "Fast file finder (better find)" "fd pattern | fd -e rs"
print_tool "ripgrep (rg)" "Ultra-fast grep replacement with smart defaults" "rg pattern | rg -t rust TODO"
print_tool "skim (sk)" "Fuzzy finder alternative to fzf" "sk | echo 'items' | sk"
print_tool "grex" "Generate regex patterns from examples" "grex 'hello' 'world' 'help'"
print_tool "jq" "JSON processor and query tool" "cat data.json | jq '.field'"
print_tool "procs" "Modern process viewer (better ps)" "procs | procs rust"
print_tool "hyperfine" "Command-line benchmarking tool" "hyperfine 'command1' 'command2'"
print_tool "choose" "Human-friendly cut replacement" "echo 'a:b:c' | choose 1"
print_tool "trash-cli" "Safe file deletion to trash" "trash file.txt"
print_tool "ouch" "Universal archive tool (compress/decompress)" "ouch compress file.txt archive.zip | ouch decompress archive.zip"
print_tool "tealdeer" "Fast tldr client with caching" "tldr git"
print_tool "lemmeknow" "Identify mysterious data formats" "lemmeknow 'SGVsbG8gV29ybGQ='"

# Network & Monitoring
echo -e "${GREEN}🌐  Network & Monitoring${NC}"
echo -e "${GREEN}─────────────────────────${NC}"
print_tool "bandwhich" "Network bandwidth monitor by process" "bandwhich"
print_tool "gping" "Visual ping with graph output" "gping google.com"
print_tool "broot" "Interactive directory navigation" "br | broot"

# Database & Query Tools
echo -e "${GREEN}🗃️  Database & Query Tools${NC}"
echo -e "${GREEN}─────────────────────────${NC}"
print_tool "dsq" "SQL queries on JSON/CSV/any format" "dsq 'SELECT * FROM data.json WHERE id > 5'"
print_tool "xsv" "CSV manipulation toolkit" "xsv select name,age data.csv | xsv stats"

# Container & Cloud
echo -e "${GREEN}🐳  Container & Cloud${NC}"
echo -e "${GREEN}──────────────────────${NC}"
print_tool "dive" "Docker image analysis and optimization" "dive nginx:latest"
print_tool "ctop" "Container resource monitor" "ctop"
print_tool "k9s" "Kubernetes TUI (Linux only)" "k9s"

# Security Tools
echo -e "${GREEN}🔒  Security Tools${NC}"
echo -e "${GREEN}─────────────────${NC}"
print_tool "gitleaks" "Git secrets and credential detection" "gitleaks detect"

# Footer
echo -e "${MAGENTA}═══════════════════════════════════════════════════════════════${NC}"
echo -e "${YELLOW}💡 Pro Tips:${NC}"
echo -e "  • Use ${CYAN}tldr <command>${NC} to get quick usage examples (powered by tealdeer)"
echo -e "  • Most tools support ${CYAN}--help${NC} flag for detailed options"
echo -e "  • Check ${CYAN}man <command>${NC} for comprehensive documentation"
echo -e "  • Use ${CYAN}which <command>${NC} to verify tool installation"
echo -e "${MAGENTA}═══════════════════════════════════════════════════════════════${NC}"